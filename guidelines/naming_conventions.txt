Naming conventions
~~~~~~~~~~~~~~~~~~

This document describes the naming conventions for the components (be it
classes, variables or functions). By adhering to these guidelines it should be
much easier for all developers to use or work with the components. The main
idea is to have a set of consistent naming while still allowing for differences
in specific contexts.

General guidelines
===================
Avoid names which does not give additional meaning or are unclear. Some
examples of such names are:

  ::

      Quick, Smart, Clever, Simple, Fast, Strange, Stupid

Abbreviations and Acronyms
--------------------------

In general one should not use abbreviations and acronyms unless its known by
most programmers. Typical examples for known acronyms are:

  ::

      HTTP, DAV, URL

Recommended names
-----------------

To ensure consistency troughout all components the following naming conventions
should be used. If the names don't make much sense in a given context other
names should be found. These recommendations can also be used as prefix/suffix,
e.g. *$srcX*, *$srcY*

* For file or directory paths use *path*.

* For filename without a path use *file*.

* For directory name without a path use *dir*.

* Use *load*, *save* for complete operations on the filesystem, for instance
  loading an entire *INI* file.

* Use *read*, *write* for partial operations of data stream, for instance
  storing 10 bytes to a file.

* Use *fetch*, *store* for remote operations, for instance fetching data from a
  web server or database.

* When adding elements the following naming should be used:

  - Use *add* when adding elements without a specific order.

  - Use *insert* when adding elements in a specific order, for instance at a
    given index or position.

  - Use *append* when adding elements to the end.

  - Use *prepend* when adding elements to the beginning.

* When removing elements the following naming should be used:

  - Use *remove* when elements are no longer referenced but not actually
    deleted. For instance removing a filepath from a list while still leaving
    the file on the filesystem.

  - Use *delete* when elements are no longer meant to exists. For instance
    unlinking a file from the filesystem or deleting a database record.

* Short names are adviced when their context is very clear. An example is a
  copy() function in a File class which has a source and a destination, it is
  quite clear that in this context we are working with files and can use
  abbreviated forms, *src* and *dest*.  copy( $src, $dest ) The order of
  source and destination is always source first.

* Some words are different in Brithish English and American English. It is most
  common to use the American spelling and so all words should follow this.
  Some typical names are:

  ::

    initialize, finalize, color, grey

Specific elements
=================

Each element is explain

Class names
-----------

Classes are named using `UpperCamelCase`_ and are always prefixed with *ezc*
which stands for eZ publish components. Do not use more than three words for
your names and make sure they are not verbs but nouns.

  ::

      ezcSystemInformation, ezcTemplate, ezcWebdavServer

Method names
------------

Methods are named using `lowerCamelCase`_ and should not use more than three
words. Methods which change an internal property should be named setXXX() and
in addition the retrieval method must be named getXXX().  All methods must use
a verb.

  ::

      printReport(), validateData(), publish()

Property names
--------------

Properties are named using `lowerCamelCase`_ and should not use more than two
words. Properties must always use nouns and not verbs.

  ::

      $name, $path, $author

Parameter names
---------------

Parameters are named using `lowerCamelCase`_ and should not use more than two
words. Parameters must always use nouns and not verbs, the exception are
booleans which start with *is*, *has* etc. and form a question.

  ::

      $name, $path, $isObject

  .. _lowerCamelCase: http://en.wikipedia.org/wiki/CamelCase
  .. _UpperCamelCase: http://en.wikipedia.org/wiki/CamelCase


..
   Local Variables:
   mode: rst
   indent-tabs-mode: nil
   sentence-end-double-space: t
   fill-column: 79
   End:
