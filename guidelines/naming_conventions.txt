Naming conventions
~~~~~~~~~~~~~~~~~~


General guidelines
===================
Avoid names which does not give additional meaning or are
unclear. Some examples of such names are:

 * Quick

 * Smart

 * Clever

 * Simple

 * Fast

 * Strange

 * Stupid

Specific elements
=================

Class names
-----------

* Class names are prefixed with *ezc* which stands for eZ publish components.
* Recommended number of words are 1-3
* Do not use verbs for names

Function names
--------------

* Recommended number of words are 1-3
* Use setXXX() for setting a property and getXXX() for getting the property.
* All functions that performs an action of some kind must use a verb,
  like: printReport(), validateData().

Property names
--------------

* Recommended number of words are 1-2
* Do not use verbs for names

Parameter names
---------------

* Recommended number of words are 1-2

Recommended names
==================

* For file or directory paths use $path
* For filename without a path use $file
* For directory name without a path use $dir
* Use load(), save() for complete operations on the filesystem, for instance loading an entire INI file.
* Use read(), write() for partial operations of data stream, for instance storing 10 bytes to a file.
* Use fetch(), store() for remote operations, for instance fetching data from a web server or database.
* Short names are adviced when their context is very clear. An example
  is a copy() function in a File class which has a source and a
  destination, it is quite clear that in this context we are working
  with files and can use abbreviated forms, 'src' and 'dst'.
  copy( $src, $dst )
  The order of source and destination is always source first.


..
   Local Variables:
   mode: rst
   indent-tabs-mode: nil
   sentence-end-double-space: t
   fill-column: 70
   End:
