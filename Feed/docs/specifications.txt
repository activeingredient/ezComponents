Feed specifications
~~~~~~~~~~~~~~~~~~~

This document lists the various feed types supported by the Feed component,
general information about each feed type, and the related specifications
documents and RFCs.

.. contents:: Table of Contents


Feeds equivalence
=================

Feed elements
-------------

+----------------------------+-------------------------+----------------------------+---------------------------+
|         ezcFeed            |           ATOM          |            RSS1            |           RSS2            |
+============================+=========================+============================+===========================+
| |ezcFeed-author|_ !*       | |ATOM-author|_ !*       | x                          | |RSS2-managingEditor|_ ?  |
+----------------------------+-------------------------+----------------------------+---------------------------+
| |ezcFeed-category|_ ?*     | |ATOM-category|_ ?*     | x                          | |RSS2-category|_ ?*       |
+----------------------------+-------------------------+----------------------------+---------------------------+
| |ezcFeed-cloud|_ ?         | x                       | x                          | |RSS2-cloud|_ ?           |
+----------------------------+-------------------------+----------------------------+---------------------------+
| |ezcFeed-contributor|_ ?   | |ATOM-contributor|_ ?*  | x                          | x                         |
+----------------------------+-------------------------+----------------------------+---------------------------+
| |ezcFeed-copyright|_ ?     | |ATOM-rights|_ ?        | x                          | |RSS2-copyright|_ ?       |
+----------------------------+-------------------------+----------------------------+---------------------------+
| |ezcFeed-description|_ !   | |ATOM-subtitle|_ ?      | |RSS1-description|_ !      | |RSS2-description|_ !     |
+----------------------------+-------------------------+----------------------------+---------------------------+
| |ezcFeed-docs|_ ?          | x                       | x                          | |RSS2-docs|_ ?            |
+----------------------------+-------------------------+----------------------------+---------------------------+
| |ezcFeed-generator|_ ?     | |ATOM-generator|_ ?     | x                          | |RSS2-generator|_ ?       |
+----------------------------+-------------------------+----------------------------+---------------------------+
| |ezcFeed-icon|_ ?          | |ATOM-icon|_ ?          | x                          | x                         |
+----------------------------+-------------------------+----------------------------+---------------------------+
| |ezcFeed-id|_ !            | |ATOM-id|_ !            | |RSS1-about|_ !            | x                         |
+----------------------------+-------------------------+----------------------------+---------------------------+
| |ezcFeed-image|_ ?         | |ATOM-logo|_ ?          | |RSS1-image|_ ?            | |RSS2-image|_ ?           |
+----------------------------+-------------------------+----------------------------+---------------------------+
| |ezcFeed-item|_ !*         | |ATOM-entry|_ ?*        | |RSS1-item|_ !*            | |RSS2-item|_ !*           |
+----------------------------+-------------------------+----------------------------+---------------------------+
| |ezcFeed-language|_ ?      | x                       | x                          | |RSS2-language|_ ?        |
+----------------------------+-------------------------+----------------------------+---------------------------+
| |ezcFeed-link|_ !*         | |ATOM-link|_ !*         | |RSS1-link|_ !             | |RSS2-link|_ !            |
+----------------------------+-------------------------+----------------------------+---------------------------+
| |ezcFeed-published|_ ?     | x                       | x                          | |RSS2-pubDate|_ ?         |
+----------------------------+-------------------------+----------------------------+---------------------------+
| |ezcFeed-rating|_ ?        | x                       | x                          | |RSS2-rating|_ ?          |
+----------------------------+-------------------------+----------------------------+---------------------------+
| |ezcFeed-skipDays|_ ?      | x                       | x                          | |RSS2-skipDays|_ ?        |
+----------------------------+-------------------------+----------------------------+---------------------------+
| |ezcFeed-skipHours|_ ?     | x                       | x                          | |RSS2-skipHours|_ ?       |
+----------------------------+-------------------------+----------------------------+---------------------------+
| |ezcFeed-textInput|_ ?     | x                       | |RSS1-textinput|_ ?        | |RSS2-textInput|_ ?       |
+----------------------------+-------------------------+----------------------------+---------------------------+
| |ezcFeed-title|_ !         | |ATOM-title|_ !         | |RSS1-title|_ !            | |RSS2-title|_ !           |
+----------------------------+-------------------------+----------------------------+---------------------------+
| |ezcFeed-ttl|_ ?           | x                       | x                          | |RSS2-ttl|_ ?             |
+----------------------------+-------------------------+----------------------------+---------------------------+
| |ezcFeed-updated|_ !       | |ATOM-updated|_ !       | x                          | |RSS2-lastBuildDate|_ ?   |
+----------------------------+-------------------------+----------------------------+---------------------------+
| |ezcFeed-webMaster|_ ?     | x                       | x                          | |RSS2-webMaster|_ ?       |
+----------------------------+-------------------------+----------------------------+---------------------------+

| ! = required
| ? = optional
| * = can appear multiple times
| x = no equivalence


Item elements
-------------

+---------------------------------+-------------------------------+------------------------------+------------------------------+
|           ezcFeed               |            ATOM               |             RSS1             |            RSS2              |
+=================================+===============================+==============================+==============================+
| |ezcFeed-item-author|_ !*       | |ATOM-entry-author|_ !*       | x                            | |RSS2-item-author|_ ?        |
+---------------------------------+-------------------------------+------------------------------+------------------------------+
| |ezcFeed-item-category|_ ?*     | |ATOM-entry-category|_ ?*     | x                            | |RSS2-item-category|_ ?*     |
+---------------------------------+-------------------------------+------------------------------+------------------------------+
| |ezcFeed-item-comments|_ ?      | x                             | x                            | |RSS2-item-comments|_ ?      |
+---------------------------------+-------------------------------+------------------------------+------------------------------+
| |ezcFeed-item-content|_ ?       | |ATOM-entry-content|_ ?       | x                            | x                            |
+---------------------------------+-------------------------------+------------------------------+------------------------------+
| |ezcFeed-item-contributor|_ ?*  | |ATOM-entry-contributor|_ ?*  | x                            | x                            |
+---------------------------------+-------------------------------+------------------------------+------------------------------+
| |ezcFeed-item-copyright|_ ?     | |ATOM-entry-rights|_ ?        | x                            | x                            |
+---------------------------------+-------------------------------+------------------------------+------------------------------+
| |ezcFeed-item-description|_ !   | |ATOM-entry-summary|_ !       | |RSS1-item-description|_ !   | |RSS2-item-description|_ !   |
+---------------------------------+-------------------------------+------------------------------+------------------------------+
| |ezcFeed-item-enclosure|_ ?     | |ATOM-entry-link|_ ?*         | x                            | |RSS2-item-enclosure|_ ?     |
+---------------------------------+-------------------------------+------------------------------+------------------------------+
| |ezcFeed-item-id|_ !            | |ATOM-entry-id|_ !            | |RSS1-item-about|_ !         | |RSS2-item-guid|_ ?          |
+---------------------------------+-------------------------------+------------------------------+------------------------------+
| |ezcFeed-item-link|_ !*         | |ATOM-entry-link|_ !*         | |RSS1-item-link|_ !          | |RSS2-item-link|_ !          |
+---------------------------------+-------------------------------+------------------------------+------------------------------+
| |ezcFeed-item-published|_ ?     | |ATOM-entry-published|_ ?     | x                            | |RSS2-item-pubDate|_ ?       |
+---------------------------------+-------------------------------+------------------------------+------------------------------+
| |ezcFeed-item-title|_ !         | |ATOM-entry-title|_ !         | |RSS1-item-title|_ !         | |RSS2-item-title|_ !         |
+---------------------------------+-------------------------------+------------------------------++-----------------------------+
| |ezcFeed-item-updated|_ !       | |ATOM-entry-updated|_ !       | x                            | x                            |
+---------------------------------+-------------------------------+------------------------------+------------------------------+

| ! = required
| ? = optional
| * = can appear multiple times
| x = no equivalence


ezcFeed
=======

Specifications
--------------


Feed elements
-------------

ezcFeed-author
``````````````


ezcFeed-category
````````````````


ezcFeed-cloud
`````````````

Allows processes to register with a cloud to be notified of updates to the
channel, implementing a lightweight publish-subscribe protocol for RSS feeds.

Optional (not recommended). Only `RSS2`_ feeds will have this element after
generating the feed. It will be ignored for the other feed types
(`RSS1`_, `ATOM`_).

Can appear only once.

Has the required attributes: *domain*, *port*, *path*, *registerProcedure*,
*protocol*.

Create example::

  // $feed is an ezcFeed object
  $cloud = $feed->add( 'cloud' );
  $cloud->domain = 'rpc.sys.com';
  $cloud->port = 80;
  $cloud->path = '/RPC2';
  $cloud->registerProcedure = 'myCloud.rssPleaseNotify';
  $cloud->protocol = 'xml-rpc';

Parse example::

  // $feed is an ezcFeed object
  $cloud = $feed->cloud;
  $domain = $cloud->domain;
  $port = $cloud->port;
  $path = $cloud->path;
  $registerProcedure = $cloud->registerProcedure;
  $protocol = $cloud->protocol;

Equivalents: `ezcFeed-cloud`_, ATOM-none, RSS1-none, `RSS2-cloud`_.


ezcFeed-contributor
```````````````````


ezcFeed-copyright
`````````````````


ezcFeed-description
```````````````````

A short description of the feed.

Required.

Can appear only once.

`ATOM`_ has an optional attribute *type* with possible values ``text``
(default), ``html``, ``xhtml``.

`ATOM`_ has an optional attribute *xml:lang* which specifies the language of
the text. A list of allowed languages can be found here:
`RSS language codes`_. This attribute is accessed through ezcFeed as *language*.

The *type* and *xml:lang* `ATOM`_ attributes won't appear in the generated
feed when creating `RSS1`_ and `RSS2`_ feeds.

Create example::

  // $feed is an ezcFeed object
  $feed->description = 'Feed description';
  $feed->description->type = 'text'; // ATOM only, ignored in RSS1 and RSS2
  $feed->description->language = 'de'; // ATOM only, ignored in RSS1 and RSS2

Parse example::

  // $feed is an ezcFeed object
  $description = $feed->description;
  $type = $feed->description->type; // ATOM only
  $language = $feed->description->language; // ATOM only

Equivalents: `ezcFeed-description`_, `ATOM-subtitle`_, `RSS1-description`_,
`RSS2-description`_.


ezcFeed-docs
````````````

An URL that points to the documentation for the format used in the feed file.

Optional (not recommended). Only `RSS2`_ feeds will have this element after
generating the feed. It will be ignored for the other feed types
(`RSS1`_, `ATOM`_).

Can appear only once.

Create example::

  // $feed is an ezcFeed object
  $feed->docs = 'http://www.rssboard.org/rss-specification';

Parse example::

  // $feed is an ezcFeed object
  $docs = $feed->docs;

Equivalents: `ezcFeed-docs`_, ATOM-none, RSS1-none, `RSS2-docs`_.


ezcFeed-generator
`````````````````


ezcFeed-icon
````````````


ezcFeed-id
``````````


ezcFeed-image
`````````````


ezcFeed-item
````````````

Feed entry.

Optional (recommended) for ATOM. Required for RSS1 and RSS2.

Multiple entries can appear.

Create example::

  // $feed is an ezcFeed object
  $item = $feed->add( 'item' );

  // set $item properties, for example:
  $item->title = 'Item title';

Parse example::

  // $feed is an ezcFeed object
  foreach ( $feed->items as $item )
  {
      // get $item properties, for example:
      $title = $item->title;
  }

Equivalents: `ezcFeed-item`_, `ATOM-entry`_, `RSS1-item`_, `RSS2-item`_.


ezcFeed-language
````````````````


ezcFeed-link
````````````


ezcFeed-published
`````````````````

The time the feed was published.

Optional (not recommended). Only `RSS2`_ feeds will have this element after
generating the feed. It will be ignored for the other feed types
(`RSS1`_, `ATOM`_).

Can appear only once.

Must conform be a Unix timestamp. It will be converted to the datetime format
required by each feed type.

Create example::

  // $feed is an ezcFeed object
  $feed->published = now();

Parse example::

  // $feed is an ezcFeed object
  $published = $feed->published;

Equivalents: `ezcFeed-published`_, ATOM-none, RSS1-none, `RSS2-pubDate`_.


ezcFeed-rating
``````````````

The `PICS`_ rating for the channel.

Optional (not recommended). Only `RSS2`_ feeds will have this element after
generating the feed. It will be ignored for the other feed types
(`RSS1`_, `ATOM`_).

Can appear only once.

Create example::

  // $feed is an ezcFeed object
  $feed->rating = '(PICS-1.1 "http://www.gcf.org/v2.5" labels 
                    on "1994.11.05T08:15-0500" 
                    exp "1995.12.31T23:59-0000" 
                    for "http://www.greatdocs.com/foo.html" 
                    by "George Sanderson, Jr." 
                    ratings (suds 0.5 density 0 color/hue 1))';

Parse example::

  // $feed is an ezcFeed object
  $rating = $feed->rating;

Equivalents: `ezcFeed-rating`_, ATOM-none, RSS1-none, `RSS2-rating`_.


ezcFeed-skipDays
````````````````

A hint for aggregators telling them which days they can skip when reading the
feed.

Optional (not recommended). Only `RSS2`_ feeds will have this element after
generating the feed. It will be ignored for the other feed types
(`RSS1`_, `ATOM`_).

Can appear only once.

Can have up to 7 *day* elements, each with a value from ``Monday`` to ``Sunday``.

Create example::

  // $feed is an ezcFeed object
  $skip = $feed->add( 'skipDays' );
  $day = $skip->add( 'day' );
  $day->set( 'Monday' );
  $day = $skip->add( 'day' );
  $day->set( 'Friday' );

Parse example::

  // $feed is an ezcFeed object
  $days = array( 'Monday' => false, /*...*/ 'Sunday' => false );
  foreach ( $feed->skipDays as $skip )
  {
      $days[$skip->get()] = true;
  }

Equivalents: `ezcFeed-skipDays`_, ATOM-none, RSS1-none, `RSS2-skipDays`_.


ezcFeed-skipHours
`````````````````

A hint for aggregators telling them which hours they can skip when reading the
feed.

Optional (not recommended). Only `RSS2`_ feeds will have this element after
generating the feed. It will be ignored for the other feed types
(`RSS1`_, `ATOM`_).

Can appear only once.

Can have up to 24 *hour* elements, each with an integer value from ``0``
(midnight) to ``23``. The value ``24`` can also be used for midnight.

Create example::

  // $feed is an ezcFeed object
  $skip = $feed->add( 'skipHours' );
  $day = $skip->add( 'hour' );
  $day->set( '1' );
  $day = $skip->add( 'hour' );
  $day->set( '7' );

Parse example::

  // $feed is an ezcFeed object
  $hours = array( '0' => false, /*...*/ '24' => false );
  foreach ( $feed->skipHours as $skip )
  {
      $hours[$skip->get()] = true;
  }

Equivalents: `ezcFeed-skipHours`_, ATOM-none, RSS1-none, `RSS2-skipHours`_.


ezcFeed-textInput
`````````````````

Specifies a text input box that can be displayed with the feed.

Optional (not recommended).

Can appear only once. Only `RSS1`_ and `RSS2`_ feeds will have this element
after generating the feed. It will be ignored for `ATOM`_.

For `RSS1`_ it has the required attribute *about*, which should have the same
value as the *link* sub-element.

Has four required sub-elements: *title*, *description*, *name*, *link* (same
for `RSS1`_ and `RSS2`_).

Create example::

  // $feed is an ezcFeed object
  $textInput = $feed->add( 'textInput' );
  $textInput->title = 'Text input title';
  $textInput->description = 'Text input description';
  $textInput->name = 'Text input name';
  $textInput->link = 'Text input link';

Parse example::

  // $feed is an ezcFeed object
  $textInput = $feed->textInput;
  $title = $textInput->title;
  $description = $textInput->description;
  $name = $textInput->name;
  $link = $textInput->link;

Equivalents: `ezcFeed-textInput`_, ATOM-none, `RSS1-textinput`_,
`RSS2-textInput`_.


ezcFeed-title
`````````````

Human readable title for the feed. For example, it can be the same as the
website title.

Required.

Can appear only once.

`ATOM`_ has an optional attribute *type* with possible values ``text``
(default), ``html``, ``xhtml``.

`ATOM`_ has an optional attribute *xml:lang* which specifies the language of
the text. A list of allowed languages can be found here:
`RSS language codes`_. This attribute is accessed through ezcFeed as *language*.

The *type* and *xml:lang* `ATOM`_ attributes won't appear in the generated
feed when creating `RSS1`_ and `RSS2`_ feeds.

Create example::

  // $feed is an ezcFeed object
  $feed->title = 'Feed title';
  $feed->title->type = 'text'; // ATOM only, ignored in RSS1 and RSS2
  $feed->title->language = 'de'; // ATOM only, ignored in RSS1 and RSS2

Parse example::

  // $feed is an ezcFeed object
  $title = $feed->title;
  $type = $feed->title->type; // ATOM only
  $language = $feed->title->language; // ATOM only

Equivalents: `ezcFeed-title`_, `ATOM-title`_, `RSS1-title`_, `RSS2-title`_.


ezcFeed-ttl
```````````


ezcFeed-updated
```````````````


ezcFeed-webMaster
`````````````````


Item elements
-------------

ezcFeed-item-author
```````````````````


ezcFeed-item-category
`````````````````````


ezcFeed-item-comments
`````````````````````

ezcFeed-item-content
````````````````````

A short description for the feed item.

Optional (not recommended). Only `ATOM`_ feeds will have this element after
generating the feed. It will be ignored for the other feed types
(`RSS1`_, `RSS2`_). Can be substituted with |ezcFeed-item-description|_
(recommended).

Can appear only once.

Has an optional attribute *type* with possible values ``text`` (default),
``html``, ``xhtml``, or other mime values, depending on the data it contains.

Has an optional attribute *src* which specifies the URI where the full content
is located.

Has an optional attribute *xml:lang* which specifies the language of the text.
A list of allowed languages can be found here:
`RSS language codes`_.

If *src* is present, the *type* attribute, if present, is the media type of the
content.

Otherwise, if the type attribute ends in ``+xml`` or ``/xml``, then an XML
document of this type is contained inline.

Otherwise, if the type attribute starts with ``text``, then an escaped document
of this type is contained inline.

Otherwise, a base64 encoded document of the indicated media type is contained
inline.

Equivalents: `ezcFeed-item-content`_/`ezcFeed-item-description`_,
`ATOM-entry-content`_, RSS1-none, RSS2-none.


ezcFeed-item-contributor
````````````````````````


ezcFeed-item-copyright
``````````````````````


ezcFeed-item-description
````````````````````````


ezcFeed-item-enclosure
``````````````````````


ezcFeed-item-id
```````````````


ezcFeed-item-link
`````````````````


ezcFeed-item-published
``````````````````````


ezcFeed-item-title
``````````````````


ezcFeed-item-updated
````````````````````


ATOM
====

Specifications
--------------

`RFC 4287`_


Content type
------------

All ATOM feeds should be identified with the ``application/atom+xml`` content
type.


Structure
---------

General information:
 - All elements must be in the http://www.w3.org/2005/Atom namespace
 - The top level element is called *feed*
 - All timestamps must conform to `RFC 3339`_ (eg. ``2003-12-13T18:30:02Z``)
 - Unless otherwise specified, all values must be plain text
 - *xml:lang* may be used to identify the language of text (the property
   *language* for the ATOM elements |ATOM-rights|_, |ATOM-subtitle|_,
   |ATOM-title|_, |ATOM-entry-content|_, |ATOM-entry-rights|_,
   |ATOM-entry-summary|_, |ATOM-entry-title|_).
 - *xml:base* may be used to control how relative URIs are resolved (not
   recommended)

Sample ATOM feed::

  <?xml version="1.0" encoding="utf-8"?>
  <feed xmlns="http://www.w3.org/2005/Atom">

    <title>Example Feed</title>
    <link href="http://example.org/"/>
    <updated>2003-12-13T18:30:02Z</updated>
    <author>
      <name>John Doe</name>
    </author>
    <id>urn:uuid:60a76c80-d399-11d9-b93C-0003939e0af6</id>

    <entry>
      <title>Atom-Powered Robots Run Amok</title>
      <link href="http://example.org/2003/12/13/atom03"/>
      <id>urn:uuid:1225c695-cfb8-4ebb-aaaa-80da344efa6a</id>
      <updated>2003-12-13T18:30:02Z</updated>
      <summary>Some text.</summary>
    </entry>

  </feed>


Feed elements
-------------

ATOM-author
```````````

One author of the feed.

Required: one author must be present unless all items contain at least one
author.

Multiple authors can appear.

Required elements: *name*. Optional elements: *uri*, *email*.

Example::

  <author>
    <name>John Doe</name>
    <uri>http://example.com/~johndoe</uri>
    <email>JohnDoe@example.com</email>
  </author>

Equivalents: `ezcFeed-author`_, `ATOM-author`_, RSS1-none,
`RSS2-managingEditor`_.


ATOM-category
`````````````

A category for the feed.

Optional.

Multiple categories can appear.

Has one required attribute: *term*.

Has 2 optional attributes: *scheme*, *label*.

Equivalents: `ezcFeed-category`_, `ATOM-category`_, RSS1-none,
`RSS2-category`_.


ATOM-contributor
````````````````

One contributor of the feed.

Optional (not recommended).

Multiple contributors can appear.

Required elements: *name*. Optional elements: *uri*, *email*.

Example::

  <contributor>
    <name>John Doe</name>
    <uri>http://example.com/~johndoe</uri>
    <email>JohnDoe@example.com</email>
  </contributor>

Equivalents: `ezcFeed-contributor`_, `ATOM-contributor`_, RSS1-none,
RSS2-none.


ATOM-entry
``````````

Feed entry.

Optional (recommended).

Multiple entries can appear.

Equivalents: `ezcFeed-item`_, `ATOM-entry`_, `RSS1-item`_, `RSS2-item`_.


ATOM-generator
``````````````

Indicates the software used to generate the feed.

Optional.

Can appear only once.

Has 2 optional attributes: *url*, *version*.

Equivalents: `ezcFeed-generator`_, `ATOM-generator`_, RSS1-none,
`RSS2-generator`_.


ATOM-icon
`````````

An icon for a feed, similar with favicon.ico for websites.

Optional.

Can appear only once.

Equivalents: `ezcFeed-icon`_, `ATOM-icon`_, RSS1-none, RSS2-none.


ATOM-id
```````

A universally unique and permanent URI for a feed. For example, it can be an
Internet domain name.

Required.

Can appear only once.

Equivalents: `ezcFeed-id`_, `ATOM-id`_, `RSS1-about`_, RSS2-none.


ATOM-link
`````````

An URL to the HTML website corresponding to the channel.

Required: a link back to the feed itself must be present (with ``rel="self"``).

Multiple links can appear.

Required attributes: *href*. Optional attributes: *rel* (possible values:
``alternate`` (default), ``enclosure``, ``related``, ``self``, ``via``),
*type*, *hreflang*, *title*, *length*.

A maximum of one link with ``rel="alternate"`` can appear per *type* and
*hreflang*.

Equivalents: `ezcFeed-link`_, `ATOM-link`_, `RSS1-link`_, `RSS2-link`_.


ATOM-logo
`````````

An image associated with the feed. The value is an URL to an image.

Optional.

Can appear only once.

Equivalents: `ezcFeed-image`_, `ATOM-logo`_, `RSS1-image`_, `RSS2-image`_.


ATOM-rights
```````````

Copyright information for the feed.

Optional.

Can appear only once.

Has an optional attribute *type* with possible values ``text`` (default),
``html``, ``xhtml``.

Has an optional attribute *xml:lang* which specifies the language of the text.
A list of allowed languages can be found here: `RSS language codes`_.

Equivalents: `ezcFeed-copyright`_, `ATOM-rights`_, RSS1-none,
`RSS2-copyright`_.


ATOM-subtitle
`````````````

A short description of the feed.

Optional (recommended).

Can appear only once.

Has an optional attribute *type* with possible values ``text`` (default),
``html``, ``xhtml``.

Has an optional attribute *xml:lang* which specifies the language of the text.
A list of allowed languages can be found here: `RSS language codes`_.

Equivalents: `ezcFeed-description`_, `ATOM-subtitle`_, `RSS1-description`_,
`RSS2-description`_.


ATOM-title
``````````

Human readable title for the feed. For example, it can be the same as the
website title.

Required.

Can appear only once.

Has an optional attribute *type* with possible values ``text`` (default),
``html``, ``xhtml``.

Has an optional attribute *xml:lang* which specifies the language of the text.
A list of allowed languages can be found here: `RSS language codes`_.

Equivalents: `ezcFeed-title`_, `ATOM-title`_, `RSS1-title`_, `RSS2-title`_.


ATOM-updated
````````````

The last time the feed was updated.

Required.

Can appear only once.

Must conform to `RFC 3339`_ (eg. ``2003-12-13T18:30:02Z``).

Equivalents: `ezcFeed-updated`_, `ATOM-updated`_, RSS1-none, `RSS2-lastBuildDate`_.


Item elements
-------------

ATOM-entry-author
`````````````````

One author of the feed entry.

Required: one author must be present in each entry in case the feed does not
contain an author.

Multiple authors can appear.

Required elements: *name*. Optional elements: *uri*, *email*.

Example::

  <author>
    <name>John Doe</name>
    <uri>http://example.com/~johndoe</uri>
    <email>JohnDoe@example.com</email>
  </author>

Equivalents: `ezcFeed-item-author`_, `ATOM-entry-author`_, RSS1-none,
`RSS2-item-author`_.


ATOM-entry-category
```````````````````

A category for the feed entry.

Optional.

Multiple categories can appear.

Has one required attribute: *term*.

Has 2 optional attributes: *scheme*, *label*.

Equivalents: `ezcFeed-item-category`_, `ATOM-entry-category`_, RSS1-none,
`RSS2-item-category`_.


ATOM-entry-content
``````````````````

A short description for the feed item.

Optional (not recommended). It is required if |ATOM-entry-summary|_ is
absent). Can be substituted with |ATOM-entry-summary|_ (recommended).

Can appear only once.

Has an optional attribute *type* with possible values ``text`` (default),
``html``, ``xhtml``, or other mime values, depending on the data it contains.

Has an optional attribute *src* which specifies the URI where the full content
is located.

Has an optional attribute *xml:lang* which specifies the language of the text.
A list of allowed languages can be found here:
`RSS language codes`_.

If *src* is present, the *type* attribute, if present, is the media type of the
content.

Otherwise, if the type attribute ends in ``+xml`` or ``/xml``, then an XML
document of this type is contained inline.

Otherwise, if the type attribute starts with ``text``, then an escaped document
of this type is contained inline.

Otherwise, a base64 encoded document of the indicated media type is contained
inline.

Equivalents: `ezcFeed-item-description`_, `ATOM-entry-summary`_/
`ATOM-entry-content`_, `RSS1-item-description`_, `RSS2-item-description`_.


ATOM-entry-contributor
``````````````````````

One contributor of the feed entry.

Optional (not recommended).

Multiple contributors can appear.

Required elements: *name*. Optional elements: *uri*, *email*.

Example::

  <contributor>
    <name>John Doe</name>
    <uri>http://example.com/~johndoe</uri>
    <email>JohnDoe@example.com</email>
  </contributor>

Equivalents: `ezcFeed-item-contributor`_, `ATOM-entry-contributor`_,
RSS1-none, RSS2-none.


ATOM-entry-id
`````````````

A unique identifier in respect to other *id* values of entries in the feed. It
identifies the entry.

Required.

Can appear only once.

Equivalents: `ezcFeed-item-id`_, `ATOM-entry-id`_, `RSS1-item-about`_,
`RSS2-item-guid`_.


ATOM-entry-link
```````````````

A link to a resource related to the feed entry.

Required.

Multiple links can appear.

Required attributes: *href*. Optional attributes: *rel* (possible values:
``alternate`` (default), ``enclosure``, ``related``, ``self``, ``via``),
*type*, *hreflang*, *title*, *length*.

A maximum of one link with ``rel="alternate"`` can appear per *type* and
*hreflang*.

Recommended only one ``rel="enclosure"`` link to keep compatibility with RSS2
|RSS2-item-enclosure|_.

Equivalents: `ezcFeed-item-link`_/`ezcFeed-item-enclosure`_,
`ATOM-entry-link`_, `RSS1-item-link`_, `RSS2-item-link`_/
`RSS2-item-enclosure`_.


ATOM-entry-published
````````````````````

The time the feed item was published.

Optional (recommended).

Can appear only once.

Must conform to `RFC 3339`_ (eg. ``2003-12-13T18:30:02Z``).

Equivalents: `ezcFeed-item-published`_, `ATOM-entry-published`_, RSS1-none,
`RSS2-item-pubDate`_.


ATOM-entry-rights
`````````````````

Copyright information for the feed entry.

Optional.

Can appear only once.

Has an optional attribute *type* with possible values ``text`` (default),
``html``, ``xhtml``.

Has an optional attribute *xml:lang* which specifies the language of the text.
A list of allowed languages can be found here: `RSS language codes`_.

Equivalents: `ezcFeed-item-copyright`_, `ATOM-entry-rights`_, RSS1-none,
RSS2-none (`RSS2-copyright`_ for the whole feed).


ATOM-entry-summary
``````````````````

A short description for the feed item.

Required. Can be substituted with |ATOM-entry-content|_ (not recommended).

Can appear only once.

Has an optional attribute *type* with possible values ``text`` (default),
``html``, ``xhtml``.

Has an optional attribute *xml:lang* which specifies the language of the text.
A list of allowed languages can be found here: `RSS language codes`_.

Equivalents: `ezcFeed-item-description`_, `ATOM-entry-summary`_/
`ATOM-entry-content`_, `RSS1-item-description`_, `RSS2-item-description`_.


ATOM-entry-title
````````````````

A title for the feed item.

Required.

Can appear only once.

Has an optional attribute *type* with possible values ``text`` (default),
``html``, ``xhtml``.

Has an optional attribute *xml:lang* which specifies the language of the text.
A list of allowed languages can be found here: `RSS language codes`_.

Equivalents: `ezcFeed-item-title`_, `ATOM-entry-title`_, `RSS1-item-title`_,
`RSS2-item-title`_.


ATOM-entry-updated
``````````````````

The last time the feed entry was updated.

Required.

Can appear only once.

Must conform to `RFC 3339`_ (eg. ``2003-12-13T18:30:02Z``).

Equivalents: `ezcFeed-item-updated`_, `ATOM-entry-updated`_, RSS1-none,
RSS2-none.


RSS1
====

Specifications
--------------

`RSS1 specifications`_


Content type
------------

All RSS1 feeds should be identified with the ``application/rss+xml`` content
type (not a standard yet).


Structure
---------

Sample RSS1 feed::

  <?xml version="1.0"?>

  <rdf:RDF 
  xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
  xmlns="http://purl.org/rss/1.0/">

  <channel rdf:about="http://www.xml.com/xml/news.rss">
    <title>XML.com</title>
    <link>http://xml.com/pub</link>
    <description>
      XML.com features a rich mix of information and services 
      for the XML community.
    </description>

    <image rdf:resource="http://xml.com/universal/images/xml_tiny.gif" />

    <items>
      <rdf:Seq>
        <rdf:li resource="http://xml.com/pub/2000/08/09/xslt/xslt.html" />
        <rdf:li resource="http://xml.com/pub/2000/08/09/rdfdb/index.html" />
      </rdf:Seq>
    </items>

  </channel>
  
  <image rdf:about="http://xml.com/universal/images/xml_tiny.gif">
    <title>XML.com</title>
    <link>http://www.xml.com</link>
    <url>http://xml.com/universal/images/xml_tiny.gif</url>
  </image>
  
  <item rdf:about="http://xml.com/pub/2000/08/09/xslt/xslt.html">
    <title>Processing Inclusions with XSLT</title>
    <link>http://xml.com/pub/2000/08/09/xslt/xslt.html</link>
    <description>
     Processing document inclusions with general XML tools can be 
     problematic. This article proposes a way of preserving inclusion 
     information through SAX-based processing.
    </description>
  </item>
  
  <item rdf:about="http://xml.com/pub/2000/08/09/rdfdb/index.html">
    <title>Putting RDF to Work</title>
    <link>http://xml.com/pub/2000/08/09/rdfdb/index.html</link>
    <description>
     Tool and API support for the Resource Description Framework 
     is slowly coming of age. Edd Dumbill takes a look at RDFDB, 
     one of the most exciting new RDF toolkits.
    </description>
  </item>

  </rdf:RDF>

Feed elements
-------------

RSS1-about
``````````

A universally unique and permanent URI for a feed. For example, it can be an
Internet domain name.

Required.

Can appear only once.

Equivalents: `ezcFeed-id`_, `ATOM-id`_, `RSS1-about`_, RSS2-none.


RSS1-description
````````````````

A short description of the feed.

Required.

Can appear only once.

Equivalents: `ezcFeed-description`_, `ATOM-subtitle`_, `RSS1-description`_,
`RSS2-description`_.


RSS1-image
``````````

An image associated with the feed.

Optional.

Can appear only once.

Has the required attribute *about*, which should have the same value as the
*url* sub-element.

Has 3 required sub-elements: *title*, *link*, *url*.

Equivalents: `ezcFeed-image`_, `ATOM-logo`_, `RSS1-image`_, `RSS2-image`_.


RSS1-item
`````````

Feed entry.

Required.

Multiple entries can appear.

Equivalents: `ezcFeed-item`_, `ATOM-entry`_, `RSS1-item`_, `RSS2-item`_.


RSS1-link
`````````

The URL to the HTML website corresponding to the channel.

Required.

Can appear only once.

Equivalents: `ezcFeed-link`_, `ATOM-link`_, `RSS1-link`_, `RSS2-link`_.


RSS1-textinput
``````````````

Specifies a text input box that can be displayed with the feed.

Optional (not recommended).

Can appear only once.

Has the required attribute *about*, which should have the same value as the
*link* sub-element.

Has four required sub-elements: *title*, *description*, *name*, *link*.

Equivalents: `ezcFeed-textInput`_, ATOM-none, `RSS1-textinput`_,
`RSS2-textInput`_.


RSS1-title
``````````

Human readable title for the feed. For example, it can be the same as the
website title.

Required.

Can appear only once.

Equivalents: `ezcFeed-title`_, `ATOM-title`_, `RSS1-title`_, `RSS2-title`_.


Item elements
-------------

RSS1-item-about
```````````````

A unique identifier in respect to other *about* values in the feed. It
identifies the item. Should be identical to the *link* value of the item, if
possible.

Required.

Can appear only once.

Equivalents: `ezcFeed-item-id`_, `ATOM-entry-id`_, `RSS1-item-about`_,
`RSS2-item-guid`_.


RSS1-item-description
`````````````````````

A short description of the feed item.

Required.

Can appear only once.

Equivalents: `ezcFeed-item-description`_, `ATOM-entry-summary`_,
`RSS1-item-description`_, `RSS2-item-description`_.


RSS1-item-link
``````````````

The URL to the HTML website corresponding to the feed item.

Required.

Can appear only once.

Equivalents: `ezcFeed-item-link`_, `ATOM-entry-link`_, `RSS1-item-link`_,
`RSS2-item-link`_.


RSS1-item-title
```````````````

A title for the feed item.

Required.

Can appear only once.

Equivalents: `ezcFeed-item-title`_, `ATOM-entry-title`_, `RSS1-item-title`_,
`RSS2-item-title`_.


RSS2
====

Specifications
--------------

`RSS2 specifications`_


Content type
------------

All RSS2 feeds should be identified with the ``application/rss+xml`` content
type (not a standard yet).


Structure
---------

Sample RSS2 feed::

  <?xml version="1.0"?>
  <rss version="2.0">
   <channel>
      <title>Liftoff News</title>
      <link>http://liftoff.msfc.nasa.gov/</link>
      <description>Liftoff to Space Exploration.</description>
      <language>en-us</language>
      <pubDate>Tue, 10 Jun 2003 04:00:00 GMT</pubDate>
      <lastBuildDate>Tue, 10 Jun 2003 09:41:01 GMT</lastBuildDate>
      <docs>http://blogs.law.harvard.edu/tech/rss</docs>
      <generator>Weblog Editor 2.0</generator>
      <managingEditor>editor@example.com</managingEditor>
      <webMaster>webmaster@example.com</webMaster>
      <item>
         <title>The Engine That Does More</title>
         <link>http://liftoff.msfc.nasa.gov/news/2003/news-VASIMR.asp</link>
         <description>Before man travels to Mars, NASA hopes to design new engines that will let us fly through the Solar System more quickly.  The proposed VASIMR engine would do that.</description>
         <pubDate>Tue, 27 May 2003 08:37:32 GMT</pubDate>
         <guid>http://liftoff.msfc.nasa.gov/2003/05/27.html#item571</guid>
      </item>
      <item>
         <title>Astronauts' Dirty Laundry</title>
         <link>http://liftoff.msfc.nasa.gov/news/2003/news-laundry.asp</link>
         <description>Compared to earlier spacecraft, the International Space Station has many luxuries, but laundry facilities are not one of them.  Instead, astronauts have other options.</description>
         <pubDate>Tue, 20 May 2003 08:56:02 GMT</pubDate>
         <guid>http://liftoff.msfc.nasa.gov/2003/05/20.html#item570</guid>
      </item>
   </channel>
  </rss>


Feed elements
-------------

RSS2-category
`````````````

A category for the feed.

Optional.

Multiple categories can appear.

Has one optional attribute: *domain*.

The value of the category element must be specified.

Equivalents: `ezcFeed-category`_, `ATOM-category`_, RSS1-none,
`RSS2-category`_.


RSS2-cloud
``````````

Allows processes to register with a cloud to be notified of updates to the
channel, implementing a lightweight publish-subscribe protocol for RSS feeds.

Optional (not recommended).

Can appear only once.

Has the required attributes: *domain*, *port*, *path*, *registerProcedure*,
*protocol*.

Example::

  <cloud domain="rpc.sys.com" port="80" path="/RPC2" registerProcedure="myCloud.rssPleaseNotify" protocol="xml-rpc" />

Equivalents: `ezcFeed-cloud`_, ATOM-none, RSS1-none, `RSS2-cloud`_.


RSS2-copyright
``````````````

Copyright information for the feed.

Optional.

Can appear only once.

Equivalents: `ezcFeed-copyright`_, `ATOM-rights`_, RSS1-none,
`RSS2-copyright`_.


RSS2-description
````````````````

A short description of the feed.

Required.

Can appear only once.

Equivalents: `ezcFeed-description`_, `ATOM-subtitle`_, `RSS1-description`_,
`RSS2-description`_.


RSS2-docs
`````````

An URL that points to the documentation for the format used in the RSS file. It
is usually http://www.rssboard.org/rss-specification.

Optional (not recommended).

Can appear only once.

Equivalents: `ezcFeed-docs`_, ATOM-none, RSS1-none, `RSS2-docs`_.


RSS2-generator
``````````````

Indicates the software used to generate the feed.

Optional.

Can appear only once.

Equivalents: `ezcFeed-generator`_, `ATOM-generator`_, RSS1-none,
`RSS2-generator`_.


RSS2-image
``````````

An image associated with the feed.

Optional.

Can appear only once.

Has 3 required sub-elements: *title*, *link*, *url*.

Has 3 optional sub-elements: *width*, *height*, *description*.

Equivalents: `ezcFeed-image`_, `ATOM-logo`_, `RSS1-image`_, `RSS2-image`_.


RSS2-item
`````````

Feed entry.

Required.

Multiple entries can appear.

Equivalents: `ezcFeed-item`_, `ATOM-entry`_, `RSS1-item`_, `RSS2-item`_.


RSS2-language
`````````````

The language for the feed.

Optional (recommended).

Can appear only once.

A list of allowed languages can be found here: `RSS language codes`_.

Equivalents: `ezcFeed-language`_, ATOM-*xml:lang* for each element, RSS1-none,
`RSS2-language`_.


RSS2-lastBuildDate
``````````````````

The last time the feed was updated.

Optional (recommended).

Can appear only once.

Must conform to `RFC 822`_ (eg. ``Sat, 07 Sep 2002 09:42:31 GMT``).

Equivalents: `ezcFeed-updated`_, `ATOM-updated`_, RSS1-none,
`RSS2-lastBuildDate`_.


RSS2-link
`````````

The URL to the HTML website corresponding to the channel.

Required.

Can appear only once.

Equivalents: `ezcFeed-link`_, `ATOM-link`_, `RSS1-link`_, `RSS2-link`_.


RSS2-managingEditor
```````````````````

One author of the feed.

Optional (recommended).

Can appear only once.

It is a good practice to include the name and email of the managing editor,
for example::

  <managingEditor>john.doe@example.com (John Doe)</managingEditor>

Equivalents: `ezcFeed-author`_, `ATOM-author`_, RSS1-none,
`RSS2-managingEditor`_.


RSS2-pubDate
````````````

The time the feed was published.

Optional (not recommended).

Can appear only once.

Must conform to `RFC 822`_ (eg. ``Sat, 07 Sep 2002 09:42:31 GMT``).

Equivalents: `ezcFeed-published`_, ATOM-none, RSS1-none, `RSS2-pubDate`_.


RSS2-rating
```````````

The `PICS`_ rating for the channel.

Optional (not recommended).

Can appear only once.

Equivalents: `ezcFeed-rating`_, ATOM-none, RSS1-none, `RSS2-rating`_.


RSS2-skipDays
`````````````

A hint for aggregators telling them which days they can skip when reading the
feed.

Optional (not recommended).

Can appear only once.

Can have up to 7 *day* elements, each with a value from ``Monday`` to ``Sunday``.

Equivalents: `ezcFeed-skipDays`_, ATOM-none, RSS1-none, `RSS2-skipDays`_.


RSS2-skipHours
``````````````

A hint for aggregators telling them which hours they can skip when reading the
feed.

Optional (not recommended).

Can appear only once.

Can have up to 24 *hour* elements, each with an integer value from ``0``
(midnight) to ``23``. The value ``24`` can also be used for midnight.

Equivalents: `ezcFeed-skipHours`_, ATOM-none, RSS1-none, `RSS2-skipHours`_.


RSS2-textInput
``````````````

Specifies a text input box that can be displayed with the feed.

Optional (not recommended).

Can appear only once.

Has four required sub-elements: *title*, *description*, *name*, *link*.

Equivalents: `ezcFeed-textInput`_, ATOM-none, `RSS1-textinput`_,
`RSS2-textInput`_.


RSS2-title
``````````

Human readable title for the feed. For example, it can be the same as the
website title.

Required.

Can appear only once.

Equivalents: `ezcFeed-title`_, `ATOM-title`_, `RSS1-title`_, `RSS2-title`_.


RSS2-ttl
````````

Number of minutes that indicates how long a channel can be cached before
refreshing from the source.

Optional (not recommended).

Can appear only once.

Equivalents: `ezcFeed-ttl`_, ATOM-none, RSS1-none, `RSS2-ttl`_.


RSS2-webMaster
``````````````

The email address of the webmaster responsible for the feed.

Optional (not recommended).

Can appear only once.

It is a good practice to include the name and email of the webmaster,
for example::

  <webMaster>john.doe@example.com (John Doe)</webMaster>

Equivalents: `ezcFeed-webMaster`_, ATOM-none, RSS1-none, `RSS2-webMaster`_.


Item elements
-------------

RSS2-item-author
````````````````

The email address of the person who created the feed item.

Optional (recommended).

Can appear only once.

It is a good practice to include the name and email of the author, for
example::

  <author>john.doe@example.com (John Doe)</author>

Equivalents: `ezcFeed-item-author`_, `ATOM-entry-author`_, RSS1-none,
`RSS2-item-author`_.


RSS2-item-category
``````````````````

A category for the feed.

Optional.

Multiple categories can appear.

Has one optional attribute: *domain*.

The value of the category element must be specified.

Equivalents: `ezcFeed-item-category`_, `ATOM-entry-category`_, RSS1-none,
`RSS2-item-category`_.


RSS2-item-comments
``````````````````

A link to a webpage for comments.

Optional (not recommended).

Can appear only once.

Equivalents: `ezcFeed-item-comments`_, ATOM-none, RSS1-none,
`RSS2-item-comments`_.


RSS2-item-description
`````````````````````

A short description of the feed item.

Required.

Can appear only once.

Equivalents: `ezcFeed-item-description`_, `ATOM-entry-summary`_,
`RSS1-item-description`_, `RSS2-item-description`_.


RSS2-item-enclosure
```````````````````

A link to a multimedia file attached to the feed item.

Optional.

Can appear only once.

Has 3 required attributes: *url*, *length*, *type*.

Equivalents: `ezcFeed-item-enclosure`_, `ATOM-entry-link`_, RSS1-none,
`RSS2-item-enclosure`_.


RSS2-item-guid
``````````````

A unique identifier in respect to other *guid* values of items in the feed. It
identifies the item.

Optional (recommended).

Can appear only once.

Has an optional attribute *isPermaLink* with possible values ``true`` or
``false`` (default), which specifies if the *guid* value is an URL.

Equivalents: `ezcFeed-item-id`_, `ATOM-entry-id`_, `RSS1-item-about`_,
`RSS2-item-guid`_.


RSS2-item-link
``````````````

The URL to the HTML website corresponding to the feed item.

Required.

Can appear only once.

Equivalents: `ezcFeed-item-link`_, `ATOM-entry-link`_, `RSS1-item-link`_,
`RSS2-item-link`_.


RSS2-item-pubDate
`````````````````

The time the feed item was published.

Optional (recommended).

Can appear only once.

Must conform to `RFC 822`_ (eg. ``Sat, 07 Sep 2002 09:42:31 GMT``).

Equivalents: `ezcFeed-item-published`_, `ATOM-entry-published`_, RSS1-none,
`RSS2-item-pubDate`_.


RSS2-item-title
```````````````

A title for the feed item.

Required.

Can appear only once.

Equivalents: `ezcFeed-item-title`_, `ATOM-entry-title`_, `RSS1-item-title`_,
`RSS2-item-title`_.


Content module
==============

Specifications
--------------

`Content specifications`_


Feed elements
-------------


Item elements
-------------

Content-item-encoded
````````````````````

HTML-encoded text.

Optional.

Can appear only once.

Create example::

  $feed = new ezcFeed( 'rss2' );
  $item = $feed->add( 'item' );
  $module = $item->addModule( 'Content' );
  $module->encoded = 'text content';

Parse example::

  // $item is a feed item (ezcFeedItem)
  $text = $item->Content->encoded;


DublinCore module
=================

Specifications
--------------

`DublinCore specifications`_


Feed elements
-------------


Item elements
-------------

DublinCore-item-contributor
```````````````````````````

An entity responsible for making contributions to the resource. Usually the
name of a person, organization or service.

Optional.

Can appear multiple times.

Has an optional attribute *xml:lang* which specifies the language of the text.
A list of allowed languages can be found here: `RSS language codes`_. This
attribute is accessed as *language*.

Create example::

  $feed = new ezcFeed( 'rss2' );
  $item = $feed->add( 'item' );
  $module = $item->addModule( 'DublinCore' );
  $element = $module->add( 'contributor' );
  $element->set( 'Contributor name' );
  $element->language = 'no'; // optional language specification

Parse example::

  // $item is a feed item (ezcFeedItem)
  foreach ( $item->DublinCore->contributor as $element )
  {
      echo $element->__toString();
      echo $element->language;
  }


DublinCore-item-coverage
````````````````````````

The spatial or temporal topic of the resource, the spatial applicability of
the resource, or the jurisdiction under which the resource is relevant. A
recommended practice is to use a controlled vocabulary such as `TGN`_.

Optional.

Can appear multiple times.

Has an optional attribute *xml:lang* which specifies the language of the text.
A list of allowed languages can be found here: `RSS language codes`_. This
attribute is accessed as *language*.


DublinCore-item-creator
```````````````````````

An entity responsible for making the resource. Usually the name of a person or
organization.

Optional.

Can appear multiple times.

Has an optional attribute *xml:lang* which specifies the language of the text.
A list of allowed languages can be found here: `RSS language codes`_. This
attribute is accessed as *language*.


DublinCore-item-date
````````````````````

A point or period of time associated with an event in the lifecycle of the
resource. Usual date format is `ISO 8601`_.

Optional.

Can appear multiple times.

Has an optional attribute *xml:lang* which specifies the language of the text.
A list of allowed languages can be found here: `RSS language codes`_. This
attribute is accessed as *language*.


DublinCore-item-description
```````````````````````````

A description of the resource.

Optional.

Can appear multiple times.

Has an optional attribute *xml:lang* which specifies the language of the text.
A list of allowed languages can be found here: `RSS language codes`_. This
attribute is accessed as *language*.


DublinCore-item-format
``````````````````````

The file format, physical medium, or dimensions of the resource. Recommended
best practices is to use a controlled vocabulary such as the list of
`Internet Media Types`_ (MIME).

Optional.

Can appear multiple times.

Has an optional attribute *xml:lang* which specifies the language of the text.
A list of allowed languages can be found here: `RSS language codes`_. This
attribute is accessed as *language*.


DublinCore-item-identifier
``````````````````````````

An unambiguous reference to the resource within a given context.

Optional.

Can appear multiple times.

Has an optional attribute *xml:lang* which specifies the language of the text.
A list of allowed languages can be found here: `RSS language codes`_. This
attribute is accessed as *language*.


DublinCore-item-language
````````````````````````

A language of the resource. Recommended best practice is to use a controlled
vocabulary such as `RFC 4646`_.

Optional.

Can appear multiple times.

Has an optional attribute *xml:lang* which specifies the language of the text.
A list of allowed languages can be found here: `RSS language codes`_. This
attribute is accessed as *language*.


DublinCore-item-publisher
`````````````````````````

An entity responsible for making the resource available. Usually the name of a
person, organization or service.

Optional.

Can appear multiple times.

Has an optional attribute *xml:lang* which specifies the language of the text.
A list of allowed languages can be found here: `RSS language codes`_. This
attribute is accessed as *language*.


DublinCore-item-relation
````````````````````````

A related resource.

Optional.

Can appear multiple times.

Has an optional attribute *xml:lang* which specifies the language of the text.
A list of allowed languages can be found here: `RSS language codes`_. This
attribute is accessed as *language*.


DublinCore-item-rights
``````````````````````

Information about rights held in and over the resource.

Optional.

Can appear multiple times.

Has an optional attribute *xml:lang* which specifies the language of the text.
A list of allowed languages can be found here: `RSS language codes`_. This
attribute is accessed as *language*.


DublinCore-item-source
``````````````````````

A related resource from which the described resource is derived.

Optional.

Can appear multiple times.

Has an optional attribute *xml:lang* which specifies the language of the text.
A list of allowed languages can be found here: `RSS language codes`_. This
attribute is accessed as *language*.


DublinCore-item-subject
```````````````````````

The topic of the resource.

Optional.

Can appear multiple times.

Has an optional attribute *xml:lang* which specifies the language of the text.
A list of allowed languages can be found here: `RSS language codes`_. This
attribute is accessed as *language*.


DublinCore-item-title
`````````````````````

The name given to the resource.

Optional.

Can appear multiple times.

Has an optional attribute *xml:lang* which specifies the language of the text.
A list of allowed languages can be found here: `RSS language codes`_. This
attribute is accessed as *language*.


DublinCore-item-type
````````````````````

The nature or genre of the resource. Recommended best practice is to use a
controlled vocabulary such as the `DCMI Type Vocabulary`_.

Optional.

Can appear multiple times.

Has an optional attribute *xml:lang* which specifies the language of the text.
A list of allowed languages can be found here: `RSS language codes`_. This
attribute is accessed as *language*.


Resources
=========

Feed
----

- `RFC 4287`_ ATOM specifications.
- `RSS1 specifications`_.
- `RSS2 specifications`_.

Modules
-------

- `Content specifications`_.


.. _RSS1 specifications: http://web.resource.org/rss/1.0/spec
.. _RSS2 specifications: http://www.rssboard.org/rss-specification
.. _RFC 4287: http://atompub.org/rfc4287.html

.. _Content specifications: http://purl.org/rss/1.0/modules/content/
.. _DublinCore specifications: http://dublincore.org/documents/dces/

.. _RFC 3339: http://www.faqs.org/rfcs/rfc3339.html
.. _RFC 822: http://www.faqs.org/rfcs/rfc822.html
.. _PICS: http://www.w3.org/PICS/
.. _TGN: http://www.getty.edu/research/tools/vocabulary/tgn/index.html
.. _ISO 8601: http://www.w3.org/TR/NOTE-datetime
.. _Internet Media Types: http://www.iana.org/assignments/media-types/
.. _RFC 4646: http://www.faqs.org/rfcs/rfc4646.html
.. _DCMI Type Vocabulary: http://dublincore.org/documents/dcmi-type-vocabulary/
.. _RSS language codes: http://www.rssboard.org/rss-language-codes

.. |ezcFeed-author| replace:: author
.. |ezcFeed-category| replace:: category
.. |ezcFeed-cloud| replace:: cloud
.. |ezcFeed-contributor| replace:: contributor
.. |ezcFeed-copyright| replace:: copyright
.. |ezcFeed-description| replace:: description
.. |ezcFeed-docs| replace:: docs
.. |ezcFeed-generator| replace:: generator
.. |ezcFeed-icon| replace:: icon
.. |ezcFeed-id| replace:: id
.. |ezcFeed-image| replace:: image
.. |ezcFeed-item| replace:: item
.. |ezcFeed-language| replace:: language
.. |ezcFeed-link| replace:: link
.. |ezcFeed-published| replace:: published
.. |ezcFeed-rating| replace:: rating
.. |ezcFeed-skipDays| replace:: skipDays
.. |ezcFeed-skipHours| replace:: skipHours
.. |ezcFeed-textInput| replace:: textInput
.. |ezcFeed-title| replace:: title
.. |ezcFeed-ttl| replace:: ttl
.. |ezcFeed-updated| replace:: updated
.. |ezcFeed-webMaster| replace:: webMaster

.. |ezcFeed-item-author| replace:: author
.. |ezcFeed-item-category| replace:: category
.. |ezcFeed-item-comments| replace:: comments
.. |ezcFeed-item-content| replace:: content
.. |ezcFeed-item-contributor| replace:: contributor
.. |ezcFeed-item-copyright| replace:: copyright
.. |ezcFeed-item-description| replace:: description
.. |ezcFeed-item-enclosure| replace:: enclosure
.. |ezcFeed-item-id| replace:: id
.. |ezcFeed-item-link| replace:: link
.. |ezcFeed-item-published| replace:: published
.. |ezcFeed-item-title| replace:: title
.. |ezcFeed-item-updated| replace:: updated

.. |ATOM-author| replace:: author
.. |ATOM-category| replace:: category
.. |ATOM-contributor| replace:: contributor
.. |ATOM-entry| replace:: entry
.. |ATOM-generator| replace:: generator
.. |ATOM-icon| replace:: icon
.. |ATOM-id| replace:: id
.. |ATOM-link| replace:: link
.. |ATOM-logo| replace:: logo
.. |ATOM-rights| replace:: rights
.. |ATOM-subtitle| replace:: subtitle
.. |ATOM-title| replace:: title
.. |ATOM-updated| replace:: updated

.. |ATOM-entry-author| replace:: author
.. |ATOM-entry-category| replace:: category
.. |ATOM-entry-content| replace:: content
.. |ATOM-entry-contributor| replace:: contributor
.. |ATOM-entry-id| replace:: id
.. |ATOM-entry-link| replace:: link
.. |ATOM-entry-published| replace:: published
.. |ATOM-entry-rights| replace:: rights
.. |ATOM-entry-summary| replace:: summary
.. |ATOM-entry-title| replace:: title
.. |ATOM-entry-updated| replace:: updated

.. |RSS1-about| replace:: about
.. |RSS1-description| replace:: description
.. |RSS1-image| replace:: image
.. |RSS1-item| replace:: item
.. |RSS1-link| replace:: link
.. |RSS1-textinput| replace:: textinput
.. |RSS1-title| replace:: title

.. |RSS1-item-about| replace:: about
.. |RSS1-item-description| replace:: description
.. |RSS1-item-link| replace:: link
.. |RSS1-item-title| replace:: title

.. |RSS2-cloud| replace:: cloud
.. |RSS2-category| replace:: category
.. |RSS2-copyright| replace:: copyright
.. |RSS2-description| replace:: description
.. |RSS2-docs| replace:: docs
.. |RSS2-generator| replace:: generator
.. |RSS2-image| replace:: image
.. |RSS2-item| replace:: item
.. |RSS2-language| replace:: language
.. |RSS2-lastBuildDate| replace:: lastBuildDate
.. |RSS2-link| replace:: link
.. |RSS2-managingEditor| replace:: managingEditor
.. |RSS2-pubDate| replace:: pubDate
.. |RSS2-rating| replace:: rating
.. |RSS2-skipDays| replace:: skipDays
.. |RSS2-skipHours| replace:: skipHours
.. |RSS2-textInput| replace:: textInput
.. |RSS2-title| replace:: title
.. |RSS2-ttl| replace:: ttl
.. |RSS2-webMaster| replace:: webMaster

.. |RSS2-item-author| replace:: author
.. |RSS2-item-category| replace:: category
.. |RSS2-item-comments| replace:: comments
.. |RSS2-item-description| replace:: description
.. |RSS2-item-enclosure| replace:: enclosure
.. |RSS2-item-guid| replace:: guid
.. |RSS2-item-link| replace:: link
.. |RSS2-item-pubDate| replace:: pubDate
.. |RSS2-item-title| replace:: title



..
   Local Variables:
   mode: rst
   fill-column: 79
   End: 
   vim: et syn=rst tw=79
