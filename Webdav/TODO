TODO
====

- Handle external URLs in path factory and backends (Bail out with 502 - Bad
  Gateway)

- Add validity checks for $name (XML tag) and $namspace (URI) properties to
  ezcWebdavDeadProperty.

- Desing interface for ezcWebdavTransport extensions (must follow client
  dispatching)

  - How to deal with unknown properties in the DAV: namespace? We currently
	just ignore them.

- Check how to deal with namespaces in dead properties.

- Memory backend does not support emulation of client test case rfc/proppatch.

  - Error emulation would need to be highly more flexible.

- ezcWebdavDateTime is a temporary solution for the issue that DateTime is
  currently not correctly serializable. Will this be fixed? We just need it for
  testing, though.

- Client test case litmus/113_props__3_propfind_invalid2 reflects the issue,
  that we can not reject invalid XML properly. a) the DAV: namespace is invalid
  by itself. b) DOM does not bail out on loading an XML string without proper
  XML declaration. WebDAV defines to reject "invalid" issues.

- Header handling needs to be refactored to allow plugins to access them.

- Add test for mime type file info extensions

- We could offer an init hook, which is announced as soon as
  ezcWebdavServer->init() is called, using it's parameters. This could make
  sense for plugins to internally store those. But actually it's sugar, because
  they can also access the data through the server singleton.

- URL encoding, UTF-8 and other charsets?

- Client initial request to deeper URLs for IE?

- Some DAV clients request logs exactly after the time they requested the lock
  to last. If the request now takes too much time, it may result in an error,
  since the lock is already gone.

- Some information was provided by the attendees of "Webdav with eZ Components"
  at the IPC2007:
  - When a resource is created, clients may provide the getcreationdate
	property (and other date properties), to keep the original dates in tact.
	We currently don't support this at all, it seems, and some (Windows)
	clients seem to provide invalid dates. At least, an attendee described that
	he got 1970-01-01 after uploading a file to mod_webdav.
  - Windows' case-insensitivity with filenames must be checked!
  - Charsets different to UTF-8 must be checked. How do we support them? Do we
	convert everything that is plain text to UTF-8 for storing? Do we need to
	overwrite php.ini settings to always send UTF-8? Do we simply store the
	charset provided and set correct headers on GET? Especially important is to
	check German and other languages Umlauts.

Code TODOs on Sat Nov 10 10:40:11 CET 2007
==========================================

Webdav/src/backends/simple.php:                        // @TODO: This assumptions is not particular correct.
Webdav/src/backends/simple.php:        // @TODO: RFC2616 Section 9.6 PUT requires us to send 501 on all
Webdav/src/backends/simple.php:        // @TODO: handle keepalive setting somehow - even the RFC is quite
Webdav/src/backends/simple.php:        // @TODO: handle keepalive setting somehow - even the RFC is quite
Webdav/src/backends/simple.php:        // @TODO: The error generated here should depend on the actual backend
Webdav/src/backends/file.php:                // @TODO: Use proper etag hashing stuff
Webdav/src/backends/file.php:            // @TODO: Mind hideDotFiles option
Webdav/src/interfaces/response.php:        // @TODO: Do we need more standard HTTP headers here?
Webdav/src/interfaces/request.php:        // @todo Implement general header checks here.
Webdav/src/path_factories/basic.php:     * @todo This is a temporary hack to satisfy memory backend and RFC.
Webdav/src/path_factories/basic.php:            // @todo This is a cleanup for the memory backend
Webdav/src/path_factories/basic.php:            // @todo Some clients first send with / and then discover it is not a resource
Webdav/src/plugins/lock/transport.php:        // @TODO is the following not restrictive enough?
Webdav/src/plugins/lock/property_handler.php:                    // @TODO Need to check for special values here!
Webdav/src/plugins/lock/main.php:        // @TODO anything to do here?
Webdav/src/plugins/lock/main.php:     * @todo Tie in Authentication to authenticate for locking
Webdav/src/plugins/lock/main.php:     * @todo A mechanism to determine authorization?
Webdav/src/plugins/lock/main.php:        // @TODO: Anything to do here?
Binary file Webdav/src/plugins/lock/.main.php.swp matches
Webdav/src/tools/xml.php:     * @todo This should throw an exception if loading of the XML fails!
Webdav/src/tools/date_time.php: * @todo Remove
Webdav/src/transport.php:            // @TODO:
Webdav/src/transport.php:     * @todo We should possibly offer an ezcWebdavTemplateTiein, which brings
Webdav/src/transport.php:     * @todo Do we need to set more headers here?
Webdav/src/transport.php:     * @todo Do we need to set more headers here?
Webdav/src/transports/property_handler.php:                // @TODO: Should this throw an exception, if the match fails?
Webdav/src/transports/header_handler.php:                // @TODO Add plugin hook
