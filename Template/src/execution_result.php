<?php
/**
 * File containing the ezcTemplateExecutionResult class
 *
 * @package Template
 * @version //autogen//
 * @copyright Copyright (C) 2005, 2006 eZ systems as. All rights reserved.
 * @license http://ez.no/licenses/new_bsd New BSD License
 */
/**
 * A struct which contains data produced by the executing a template.
 *
 * This result object will be returned back to the client processing a template
 * allowing it to fetch the output text with $output or checking for errors with
 * $errors.
 *
 * The executing template code will also use this object directly and append data
 * to $output and $errors.
 *
 * @package Template
 * @copyright Copyright (C) 2005, 2006 eZ systems as. All rights reserved.
 * @license http://ez.no/licenses/new_bsd New BSD License
 * @version //autogen//
 */
class ezcTemplateExecutionResult
{

    /**
     * The output text generated by executing a template.
     *
     * @note If it contains false it means there has been no output generated
     *       yet.
     * @var string
     */
    public $output;

    /**
     * An array of errors and warnings generated when executing a template.
     * @var array
     */
    public $errors;

    /**
     * Contains the resulting output template variables which have been set by the
     * expected code.
     * @var ezcTemplateVariableCollection
     */
    public $variables;

    /**
     * Initialise the execution result with output text.
     *
     * @param string $output The initial output text.
     * @param ezcTemplateVariableCollection $variables The initial variable list
     * which is passed to templates.
     */
    public function __construct( $output = false, /*ezcTemplateVariableCollection*/ $variables = null )
    {
        $this->output = $output;
        $this->errors = array();
        $this->variables = $variables;
    }

    /**
     * Returns the current output text, this allows the object to passed to functions working on strings.
     *
     * @return string
     */
    public function __toString()
    {
        return (string)$this->output;
    }

}
?>
