Review of MvcTools-1.0-alpha at 26.11.08
========================================

:Author: kn

API
---

[ ] The abstract class ezcMvcRouter contains a methods, which I do not really
    understand:

  - The static public method prefix() is not used or referenced anywhere
    else in that class

[ ] Make ezcMvcResult an interface or do not already implement any final
    methods. If some properties are required, there should be an extensible
    method for it. Otherwise this strongly limits the extensibility.

    The $status property still seems not really important / used to me.

[ ] The interface ezcMvcViewHandler does not define the method createResponse()
    called by the ezcMvcConfigurableDispatcher implementation, but other
    methods, which indicate a template based usage, which may not be wanted in
    case of, for example, XML creation. It should only enforce the
    createResponse() method.

[ ] The ezcMvcResponse::$status variable needs better documentation, its purpose
    is at least unclear to me. The check in
    MvcTools/src/response_writers/http.php +61 probably should be changed to
    is_object(), otherwise values like "null" cause PHP errors there.

[ ] Initialize status with 0, even when the constructor is not called - if this
    property really is required.

Documentation
-------------

[X] Didn't we agree to document parameters in teh method description and not
    behind the parameter, like in MvcTools/src/interfaces/route.php +25?

[X] The purpose behind ezcMvcRoute::prefix() is not obvious to me from the
    documentation.

    dr: it depends on the implementation what it does, in the implementations
        documentation should be extensive.

    And I don't think the prefixing could fix all the issues, which occur
    regarding prefixes of controller paths (application in subdirectory, running
    inside a PHAR, using mod_rewrite, ..)

    I actually remove the prefix in the HttpParser (script name, subdir, ..) and
    pass the basePath and the sanitized URI around. Using this inside the
    templates should solve most issues.

[X] The documentation in ezcMvcHttpRequestParser is incomplete.

[ ] The return value documentation of
	arbitDispatcherConfiguration::createFatalRedirectRequest() is wrong and
	should be: @return ezcMvcRequest. Using the currently documented return
	value breaks the main loop in ezcMvcConfigurableDispatcher.

    dr: There is no return value for
        ezcMvcDispatcherConfiguration::runPreRoutingFilters documented -- nor
        is it necessary.

	kn: Fixed method name, it should have said:
        arbitDispatcherConfiguration::createFatalRedirectRequest

Trivial, maybe irrelevant
-------------------------

ezcMvcConfigurableDispatcher
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

[ ] Increase $redirects at begin of loop, reduces redundancy and makes it less
    error prone if somebody extends / changes the code.

[ ] Even 25 should be save, make the maximum internal redirects configurable?

